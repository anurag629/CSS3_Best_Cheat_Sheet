/* applied to all */
.code {
  margin: 0px 0 30px 150px;
  padding: 20px;
  display: inline-block;
  background: black;
  color: white;
  border: 3px solid yellow;
}

.dashed {
  border: 2px solid black;
  display: block;
  background-color: black;
}

h3 {
  margin-left: 150px;
}
/* end applied to all */

/* Controling our transition start here */

/* 
transition-property: property name
transition-duration: duration
transsition-timming-finction: timming function
transition-delay: delay

transition: [property][duration][timming function][delay];

*/

.transition-div {
  margin: 0 auto;
  width: 300px;
  height: 100px;
  background-color: red;
  transition: background-color 1s;
}

.transition-div:hover {
  background-color: blue;
}

/* Controling our transitions end here */

/* Definiing property to apply transition start here */
/*
transition-property:none | all | property name;
none -> no prperty will be transitioned
all -> all transitionable properties will be transitioned
property name -> the transitioned property name

 */

.transition-dpta {
  margin: 0 auto;
  width: 100px;
  height: 100px;
  background-color: blue;
  transition-property: all;
  transition-duration: 1s;
}
.transition-dpta:hover {
  width: 200px;
  height: 200px;
  background-color: chocolate;
}
/* Definiing property to apply transition end here */

/* Specifying how long the transition will take start here */
/*
transition-duration: time value -> second or millisecond = s | ms
e.g = transition-duration: 3s;
e.g = transition-duration: 400ms;
 */

.transition-shlt {
  width: 300px;
  height: 300px;
  margin: 0 auto;
  background-color: red;
  transition-property: width, height, background-color;
  transition-duration: 2s, 3s, 400ms;
}
.transition-shlt:hover {
  width: 200px;
  height: 100px;
  background-color: blue;
}
/* Specifying how long the transition will take end here */

/* Transition timing function Part 1 start here */
/*
transition-timing-function: predefined keywords
--> ease
--> ease-in
--> ease-out
--> ease-in-out
--> linear
--> step-start
--> step-end
 */

.container {
  margin-left: 400px;
}

.transition-ttf {
  color: white;
  background-color: red;
  width: 100px;
  padding: 10px;
  margin: 10px;
  transition-property: margin-left;
  transition-duration: 2s;
}

.ease {
  transition-timing-function: ease;
}

.ease-in {
  transition-timing-function: ease-in;
}

.ease-out {
  transition-timing-function: ease-out;
}

.ease-in-out {
  transition-timing-function: ease-in-out;
}

.linear {
  transition-timing-function: linear;
}

.step-start {
  transition-timing-function: step-start;
}

.step-end {
  transition-timing-function: step-end;
}

.container:hover .transition-ttf {
  margin-left: 500px;
}

/* Transition timing function Part 1 end here */

/* Transition timing function Part 2 start here */
/*
transition-timing-function: steps(n)
transition-timing-function: steps(n, j)
n -> number of steps
j -> jump keyword -> start ||Â end
*/

.container {
  margin-left: 400px;
}

.transition-tts2 {
  color: white;
  background-color: red;
  width: 100px;
  padding: 10px;
  margin: 10px;
  transition-property: margin-left;
  transition-duration: 2s;
}

.container:hover .transition-tts2 {
  margin-left: 500px;
}

.steps {
  transition-timing-function: steps(2);
}

/*take a step then wait*/
.steps-start {
  transition-timing-function: steps(10, start);
}

/*wait then take a step */
.steps-end {
  transition-timing-function: steps(10, end);
}

/* Transition timing function Part 2 end here */

/* Transition timing function Part 3 start here */
/*
transition-timing-function: cubic-bezier(x1, y1, x2, y2);
timing function that describes a progression of movement as a cubic-bezier curve.
*/

.container {
  margin-left: 400px;
}

.transition-tts3 {
  color: white;
  background-color: red;
  width: 100px;
  padding: 10px;
  margin: 10px;
  transition-property: margin-left;
  transition-duration: 2s;
}

.container:hover .transition-tts3 {
  margin-left: 500px;
}

.cubic {
  transition-timing-function: cubic-bezier(0.99, 0.5, 0.44, 0.53);
}

/* Transition timing function Part 3 end here */

/* Setting timeout before the transition start here */
/*
transition-delay: -> 2s || 1000ms
  ->setting timeout before transition
*/

.transition {
  color: white;
  background-color: red;
  width: 100px;
  padding: 10px;
  margin: 10px;
  transition-property: margin-left;
  transition-duration: 1s;
}

.container:hover .transition {
  margin-left: 500px;
}

.delay1 {
  transition-delay: 1s;
}

.delay2 {
  transition-delay: 2s;
}

.delay3 {
  transition-delay: 3s;
}

.delay4 {
  transition-delay: 4s;
}

.delay5 {
  transition-delay: 5s;
}

/* Setting timeout before the transition end here */

/* Bringing all transition properties together start here */
/*
transition-property: property name
transition-duration: duration amount in time (seconds or milliseconds)
transition-timming-function: predefined keyword or steps function or timming-function
transition-delay: timeout amount in time (s or ms)
*/

.together {
  margin-left: 300px;
  width: 200px;
  height: 50px;
  background-color: red;
  transition-property: transform;
  transition-duration: 1.25s;
  transition-timing-function: cubic-bezier(1, 0.34, 1.4);
  transition-delay: 0.5s;
}

.together-container:hover .together {
  transform: translate(600px);
}
/* Bringing all transition properties together end here */

/* Transition shorthand property start here */
/*
transition-property: property name
transition-duration: duration amount in time (seconds or milliseconds)
transition-timming-function: predefined keyword or steps function or timming-function
transition-delay: timeout amount in time (s or ms)


transition: property-name duration timming-function delay

*/

.together-shorthand {
  margin-left: 300px;
  width: 250px;
  height: 50px;
  background-color: red;
  transition: transform 1.25s 1s;
}

.together-container-shorthand:hover .together-shorthand {
  transform: translate(600px);
}
/* Transition shorthand property end here */
